{"version":3,"sources":["images/piso_industrial.jpg","images/capas_compresion.jpg","images/losas_cimentacion.jpg","images/muro_concreto.jpg","images/prefabricados.jpg","images/malla.jpg","images/varilla.jpg","Components/Titulo.js","Components/Home.js","Components/Seccion.js","Components/Estructura.js","Components/SeccionAcero.js","Components/TipoAcero.js","Components/Calcular.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Titulo","props","to","tituloEstructura","Home","Button","variant","className","Seccion","enlace","nombre","Image","src","imagen","alt","roundedCircle","fluid","Estructura","secciones","map","seccione","index","key","SeccionAcero","pathname","eltipo","laimagen","TipoAcero","titulo","style","color","match","params","tipo","tipoAcero","acero","Calcular","width","Form","Group","controlId","Label","Control","as","onChange","tipoMalla","value","valorAcero","fontWeight","fontSize","onSubmit","calcularDosificacion","name","type","placeholder","App","useState","setValorAcero","espesor","setEspesor","piso","capas","losas","muro","prefabricados","malla","varilla","seleccionarEstructura","e","preventDefault","target","console","log","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5225c8ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piso_industrial.c57d982a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/capas_compresion.4956a05f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/losas_cimentacion.e31835d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/muro_concreto.9be71f0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prefabricados.a8bc6a08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/malla.f08dcba9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/varilla.da04727b.jpg\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Titulo(props) {\n  return(\n    <div>\n      <h1>CALCULADORA DE</h1>\n      <h2><Link to=\"/\">MACROFIBRAS DE CONCRETO</Link></h2>\n      <p>Instituto Mexicano del Cemento y del Concreto A.C.</p>\n      <hr/>\n      <h3>{props.tituloEstructura}</h3>\n    </div>\n  )\n}\n\nexport default Titulo;","import React from 'react';\nimport Titulo from './Titulo';\nimport {Link} from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\n\nfunction Home(props) {\n  return (\n    <div>\n      <Titulo />\n      <Link to=\"/seleccionar-estructura\">\n        <Button variant=\"dark\" className=\"mt-3\">  \n          SELECCIONAR ESTRUCTURA\n        </Button>\n      </Link>\n    </div>\n  )\n} \n\nexport default Home;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Image from 'react-bootstrap/Image';\n\nfunction Seccion(props){\n  return(\n    <Link to={`${props.enlace}/${props.nombre}`}>\n      <div className=\"secciones\">\n        <Image src={props.imagen} alt=\"Logo\" roundedCircle fluid/>\n        <h2>{props.nombre}</h2>\n      </div>\n    </Link>\n  )\n}\n\nexport default Seccion;","import React from 'react';\nimport Titulo from './Titulo';\nimport Seccion from './Seccion';\nimport './Estructura.css';\n\nfunction Estructura(props) {\n  return(\n    <div className=\"wpestructuras\">\n      <Titulo tituloEstructura={props.tituloEstructura} />\n      <hr/>\n      <div className=\"estructuras\">\n        {props.secciones.map((seccione, index) => (\n          <Seccion key={index} nombre={seccione.nombre} imagen={seccione.imagen} enlace={'/tipo-de-acero'} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Estructura;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Image from 'react-bootstrap/Image';\n\nfunction SeccionAcero(props){\n  return(\n    <Link to={{\n      pathname: `${props.enlace}/${props.nombre}/${props.eltipo}`,\n      laimagen: props.imagen\n      }}>\n      <div className=\"secciones\">\n        <Image src={props.imagen} alt=\"Logo\" roundedCircle fluid/>\n        <h2>{props.nombre}</h2>\n      </div>\n    </Link>\n  )\n}\n\nexport default SeccionAcero;","import React from 'react';\nimport Titulo from './Titulo';\nimport SeccionAcero from './SeccionAcero';\n\nfunction TipoAcero(props) {\n  return(\n    <div className=\"wpestructuras\">\n      <Titulo tituloEstructura={props.titulo} />\n      <h2 style={{color: '#ea8823'}}>{props.match.params.tipo}</h2>\n      <hr/>\n      <div className=\"estructuras\">\n        {props.tipoAcero.map((acero, index) => (\n          <SeccionAcero \n            key={index} \n            nombre={acero.nombre} \n            imagen={acero.imagen} \n            enlace={'/calcular'} \n            eltipo={props.match.params.tipo} \n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TipoAcero;","import React from 'react';\nimport Titulo from './Titulo';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form';\n\nfunction Calcular(props) {\n  const { eltipo, acero } = props.match.params;\n  return(\n    <div className=\"wpestructuras\">\n      <Titulo tituloEstructura={props.titulo} />\n      <h2 style={{color: '#dedede'}}>{eltipo}</h2>\n      <h2 style={{color: '#ea8823'}}>{acero}</h2>\n      {/*\n      <Image src={props.location.laimagen} alt=\"Logo\" style={{width: '100px'}} className=\"mt-3\" roundedCircle fluid/>\n       */}\n      <hr/>\n      <div className=\"calcular\">\n        <div style={{width:'100%'}}>\n          <Form>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n              <Form.Label>SELECCIONE TIPO DE MAYA ELECTROSOLDADA:</Form.Label>\n              <Form.Control as=\"select\" onChange={props.tipoMalla}>\n                <option value=\"61\">Malla 6 x 6 - 10/10</option>\n                <option value=\"87\">Malla 6 x 6 - 08/08</option>\n                <option value=\"123\">Malla 6 x 6 - 06/06</option>\n                <option value=\"169\">Malla 6 x 6 - 04/04</option>\n                <option value=\"198\">Malla 6 x 6 - 03/03</option>\n                <option value=\"228\">Malla 6 x 6 - 02/02</option>\n              </Form.Control>\n            </Form.Group>\n          </Form>\n        </div>\n        <div style={{width:'100%'}}>\n          {props.valorAcero ? \n            <div>\n              <h2>Área de acero en mm<sup>2</sup>/m</h2>\n              <h5 style={{fontWeight: 'bold',fontSize:'2em'}}>{props.valorAcero}</h5>\n              <Form onSubmit={props.calcularDosificacion}>\n                <Form.Group controlId=\"formBasicEspesor\">\n                  <Form.Control name=\"espesor\" type=\"number\" placeholder=\"Ingresar espesor de la LOSA en cm\" />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicResistencia\">\n                  <Form.Control name=\"resistencia\" type=\"number\" placeholder=\"Ingresar resistencia a la compresión del concreto en Kg/cm2\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                  CALCULAR\n                </Button>\n              </Form>\n            </div> \n            : \n            ''\n          }\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Calcular;","import React, { useState } from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './Components/Home';\nimport Estructura from './Components/Estructura';\nimport TipoAcero from './Components/TipoAcero';\nimport Calcular from './Components/Calcular';\nimport piso from './images/piso_industrial.jpg';\nimport capas from './images/capas_compresion.jpg';\nimport losas from './images/losas_cimentacion.jpg';\nimport muro from './images/muro_concreto.jpg';\nimport prefabricados from './images/prefabricados.jpg';\nimport malla from './images/malla.jpg';\nimport varilla from './images/varilla.jpg';\n\nimport './App.css';\n\nfunction App() {\n  const [ tituloEstructura ] =  useState(\"¿QUE TIPO DE ESTRUCTURA VA A ELABORAR?\");\n  const [ valorAcero, setValorAcero ] = useState();\n  const [ espesor, setEspesor ] = useState(0);\n  const [ resistencia, setResistencia ] = useState();\n  \n  const secciones = [\n    {\n      nombre: 'PISO INDUSTRIAL',\n      imagen: piso\n    },\n    {\n      nombre: 'CAPAS DE COMPRESIÓN',\n      imagen: capas\n    },\n    {\n      nombre: 'LOSAS DE CIMENTACIÓN',\n      imagen: losas\n    },\n    {\n      nombre: 'MUROS DE CONCRETO',\n      imagen: muro\n    },\n    {\n      nombre: 'ELEMENTOS PREFABRICADOS',\n      imagen: prefabricados\n    }\n  ]\n\n  const tipoAcero = [\n    {\n      nombre: 'MALLA ELECTROSOLDADA',\n      imagen: malla\n    },\n    {\n      nombre: 'VARILLA',\n      imagen: varilla\n    }\n  ]\n\n  const seleccionarEstructura = (e) => {\n    e.preventDefault();\n  }\n\n  const tipoMalla= (e) => {\n    e.preventDefault();\n    setValorAcero(e.target.value)\n  }\n\n  const calcularDosificacion = (e) => {\n    e.preventDefault();\n    setEspesor(e.target.espesor.value);\n    console.log('espesor ' + espesor);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HashRouter>\n          <Switch>\n              <Route \n                exact \n                path=\"/\" \n                component={(props) => <Home \n                  seleccionarEstructura={seleccionarEstructura}\n                  {...props}\n                />}\n              />\n              <Route \n                exact \n                path=\"/seleccionar-estructura\" \n                component={(props) => <Estructura\n                  tituloEstructura={tituloEstructura}\n                  secciones={secciones}\n                  {...props}\n                />}\n              />\n              <Route \n                exact \n                path=\"/tipo-de-acero/:tipo\" \n                component={(props) => <TipoAcero\n                  titulo={\"¿QUE TIPO DE ACERO DE REFUERZO QUEREMOS SUSTITUIR?\"}\n                  tipoAcero={tipoAcero}\n                  {...props}\n                />}\n              />\n              <Route \n                exact \n                path=\"/calcular/:acero/:eltipo\" \n                component={(props) => <Calcular\n                  tipoMalla={tipoMalla}\n                  valorAcero={valorAcero}\n                  calcularDosificacion={calcularDosificacion}\n                  {...props}\n                />}\n              />\n          </Switch>\n        </HashRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}